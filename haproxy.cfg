global
    log /dev/log    local0
    log /dev/log    local1 notice
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
    stats timeout 30s
    user haproxy
    group haproxy
    daemon

    # Default SSL material locations
    ca-base /etc/ssl/certs
    crt-base /etc/ssl/private

    # SSL settings (combined from both configurations)
    ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
    ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets


    tune.bufsize 1048576  # 1MB buffer size
    tune.maxrewrite 1024

resolvers mydns
    nameserver kube-dns 10.96.0.10:53
    resolve_retries       3
    timeout resolve       1s
    timeout retry         1s
    hold valid            10s

defaults
    log     global
    mode    http
    option  httplog
    option  dontlognull
    option  forwardfor
    timeout connect 5s
    timeout client  30s
    timeout server  30s
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http
    
frontend https_front
    bind *:443 ssl crt /etc/haproxy/certs/combined.pem crt /etc/haproxy/certs/iafri.pem
    mode http
    
    # Headers
    http-response set-header Strict-Transport-Security "max-age=31536000; includeSubDomains"
    http-response set-header X-XSS-Protection "1; mode=block"
    http-response set-header X-Content-Type-Options nosniff
    http-response set-header Referrer-Policy "strict-origin"
    http-response set-header X-Frame-Options SAMEORIGIN
    
    acl host_url_s_fe hdr(host) -i short.irvineafri.com
    acl host_url_s_be hdr(host) -i s.irvineafri.com
    acl host_url_s_be hdr(host) -i s.iafri.com

    use_backend url_s_fe if host_url_s_fe
    use_backend url_s_be if host_url_s_be
    

backend url_s_fe
        mode http
        server kube_node1 localhost:3000

backend url_s_be
        mode http
        server kube_node1 localhost:15522